kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    deployment.kubernetes.io/revision: '1'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"creationTimestamp":null,"labels":{"app.kubernetes.io/instance":"modelmesh-controller","app.kubernetes.io/managed-by":"modelmesh-controller","app.kubernetes.io/name":"modelmesh-controller","modelmesh-service":"modelmesh-serving","name":"modelmesh-serving-ovms"},"name":"modelmesh-serving-ovms","namespace":"fraud-detection-w-modelmesh","ownerReferences":[{"apiVersion":"serving.kserve.io/v1alpha1","blockOwnerDeletion":true,"controller":true,"kind":"ServingRuntime","name":"ovms","uid":"4f7c5514-2a1f-479b-9978-93ffe4170856"}]},"spec":{"replicas":1,"selector":{"matchLabels":{"modelmesh-service":"modelmesh-serving","name":"modelmesh-serving-ovms"}},"strategy":{"rollingUpdate":{"maxSurge":"75%","maxUnavailable":"15%"}},"template":{"metadata":{"annotations":{"prometheus.io/path":"/metrics","prometheus.io/port":"2112","prometheus.io/scheme":"https","prometheus.io/scrape":"true"},"creationTimestamp":null,"labels":{"app.kubernetes.io/instance":"modelmesh-controller","app.kubernetes.io/managed-by":"modelmesh-controller","app.kubernetes.io/name":"modelmesh-controller","modelmesh-service":"modelmesh-serving","name":"modelmesh-serving-ovms"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.io/arch","operator":"In","values":["amd64","arm64"]}]}]}}},"containers":[{"env":[{"name":"REST_PROXY_LISTEN_PORT","value":"8008"},{"name":"REST_PROXY_GRPC_PORT","value":"8033"},{"name":"REST_PROXY_USE_TLS","value":"false"},{"name":"REST_PROXY_GRPC_MAX_MSG_SIZE_BYTES","value":"16777216"}],"image":"registry.redhat.io/rhoai/odh-mm-rest-proxy-rhel8@sha256:200d075020e9f393d190a9f480ce7276ec63eb1a6edbf142c997ac8919c0eff2","name":"rest-proxy","ports":[{"containerPort":8008,"name":"http"}],"resources":{"limits":{"cpu":"1","memory":"512Mi"},"requests":{"cpu":"50m","memory":"96Mi"}}},{"args":["--https-address=:8443","--provider=openshift","--openshift-service-account=\"modelmesh-serving-sa\"","--upstream=http://localhost:8008","--tls-cert=/etc/tls/private/tls.crt","--tls-key=/etc/tls/private/tls.key","--cookie-secret=SECRET","--openshift-delegate-urls={\"/\":
      {\"namespace\": \"fraud-detection-w-modelmesh\", \"resource\":
      \"services\", \"verb\": \"get\"}}","--openshift-sar={\"namespace\":
      \"fraud-detection-w-modelmesh\", \"resource\": \"services\", \"verb\":
      \"get\"}","--skip-auth-regex='(^/metrics|^/apis/v1beta1/healthz)'"],"image":"registry.redhat.io/openshift4/ose-oauth-proxy@sha256:4bef31eb993feb6f1096b51b4876c65a6fb1f4401fee97fa4f4542b6b7c9bc46","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/oauth/healthz","port":8443,"scheme":"HTTPS"},"initialDelaySeconds":30,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"name":"oauth-proxy","ports":[{"containerPort":8443,"name":"https"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/oauth/healthz","port":8443,"scheme":"HTTPS"},"initialDelaySeconds":5,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{"cpu":"100m","memory":"256Mi"},"requests":{"cpu":"100m","memory":"256Mi"}},"volumeMounts":[{"mountPath":"/etc/tls/private","name":"proxy-tls"}]},{"args":["--port=8001","--rest_port=8888","--config_path=/models/model_config_list.json","--file_system_poll_wait_seconds=0","--grpc_bind_address=127.0.0.1","--rest_bind_address=127.0.0.1"],"image":"quay.io/modh/openvino_model_server@sha256:007304a96acd654ca5133c50990c6785464fcea44304c8a846d3279b9c83a9d4","lifecycle":{"preStop":{"httpGet":{"path":"/prestop","port":8090}}},"name":"ovms","resources":{"limits":{"cpu":"2","memory":"8Gi"},"requests":{"cpu":"1","memory":"4Gi"}},"securityContext":{"capabilities":{"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/models","name":"models-dir"},{"mountPath":"/dev/shm","name":"shm"}]},{"command":["/opt/app/ovms-adapter"],"env":[{"name":"ADAPTER_PORT","value":"8085"},{"name":"RUNTIME_PORT","value":"8888"},{"name":"RUNTIME_DATA_ENDPOINT","value":"port:8001"},{"name":"CONTAINER_MEM_REQ_BYTES","valueFrom":{"resourceFieldRef":{"containerName":"ovms","divisor":"0","resource":"requests.memory"}}},{"name":"MEM_BUFFER_BYTES","value":"134217728"},{"name":"LOADTIME_TIMEOUT","value":"90000"},{"name":"USE_EMBEDDED_PULLER","value":"true"},{"name":"RUNTIME_VERSION","value":"007304a96acd654ca5133c50990c6785464fcea44304c8a846d3279b9c83a9d4"},{"name":"OVMS_FORCE_TARGET_DEVICE","value":"AUTO"}],"image":"registry.redhat.io/rhoai/odh-modelmesh-runtime-adapter-rhel8@sha256:18f2a43f2e12a0aadc3695f88d5b37593027fb1a2bb5dd7ef8e119b586d2958f","lifecycle":{"preStop":{"httpGet":{"path":"/prestop","port":8090}}},"name":"ovms-adapter","resources":{"limits":{"cpu":"2","memory":"512Mi"},"requests":{"cpu":"50m","memory":"96Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/models","name":"models-dir"},{"mountPath":"/storage-config","name":"storage-config","readOnly":true}]},{"env":[{"name":"MM_SERVICE_NAME","value":"modelmesh-serving"},{"name":"MM_SVC_GRPC_PORT","value":"8033"},{"name":"WKUBE_POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"WKUBE_POD_IPADDR","valueFrom":{"fieldRef":{"fieldPath":"status.podIP"}}},{"name":"MM_LOCATION","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"KV_STORE","value":"etcd:/opt/kserve/mmesh/etcd/etcd_connection"},{"name":"MM_METRICS","value":"prometheus:port=2112;scheme=https"},{"name":"SHUTDOWN_TIMEOUT_MS","value":"90000"},{"name":"INTERNAL_SERVING_GRPC_PORT","value":"8001"},{"name":"INTERNAL_GRPC_PORT","value":"8085"},{"name":"MM_SVC_GRPC_MAX_MSG_SIZE","value":"16777216"},{"name":"MM_KVSTORE_PREFIX","value":"mm"},{"name":"MM_DEFAULT_VMODEL_OWNER","value":"ksp"},{"name":"MM_LABELS","value":"mt:onnx,mt:onnx:1,mt:openvino_ir,mt:openvino_ir:opset1,mt:tensorflow,mt:tensorflow:2,pv:grpc-v1,rt:ovms"},{"name":"MM_TYPE_CONSTRAINTS_PATH","value":"/etc/watson/mmesh/config/type_constraints"},{"name":"MM_DATAPLANE_CONFIG_PATH","value":"/etc/watson/mmesh/config/dataplane_api_config"}],"image":"registry.redhat.io/rhoai/odh-modelmesh-rhel8@sha256:6478ce1c4b8780a62f44517cb9c56a0f0b7b2d75ff1120bcc21fca4dea8f4c1e","lifecycle":{"preStop":{"exec":{"command":["/opt/kserve/mmesh/stop.sh","wait"]}}},"livenessProbe":{"failureThreshold":2,"httpGet":{"path":"/live","port":8089},"initialDelaySeconds":90,"periodSeconds":30,"timeoutSeconds":5},"name":"mm","ports":[{"containerPort":8033,"name":"grpc"},{"containerPort":2112,"name":"prometheus"}],"readinessProbe":{"httpGet":{"path":"/ready","port":8089},"initialDelaySeconds":5,"periodSeconds":5,"timeoutSeconds":1},"resources":{"limits":{"cpu":"3","memory":"448Mi"},"requests":{"cpu":"300m","memory":"448Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/etc/watson/mmesh/config","name":"tc-config"},{"mountPath":"/opt/kserve/mmesh/etcd","name":"etcd-config","readOnly":true}]}],"serviceAccountName":"modelmesh-serving-sa","terminationGracePeriodSeconds":90,"volumes":[{"emptyDir":{"medium":"Memory","sizeLimit":"2Gi"},"name":"shm"},{"name":"proxy-tls","secret":{"secretName":"model-serving-proxy-tls"}},{"emptyDir":{"sizeLimit":"12Gi"},"name":"models-dir"},{"name":"storage-config","secret":{"secretName":"storage-config"}},{"configMap":{"name":"tc-config"},"name":"tc-config"},{"name":"etcd-config","secret":{"secretName":"model-serving-etcd"}}]}}},"status":{}}
    manifestival: new
  resourceVersion: '484232440'
  name: modelmesh-serving-ovms
  uid: 5db375ea-03b7-47c5-a739-5ac14929d6c6
  creationTimestamp: '2024-02-23T14:19:21Z'
  generation: 3
  managedFields:
    - manager: manager
      operation: Update
      apiVersion: apps/v1
      time: '2024-02-23T14:19:41Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
            'f:manifestival': {}
          'f:labels':
            .: {}
            'f:app.kubernetes.io/instance': {}
            'f:app.kubernetes.io/managed-by': {}
            'f:app.kubernetes.io/name': {}
            'f:modelmesh-service': {}
            'f:name': {}
          'f:ownerReferences':
            .: {}
            'k:{"uid":"4f7c5514-2a1f-479b-9978-93ffe4170856"}': {}
        'f:spec':
          'f:progressDeadlineSeconds': {}
          'f:replicas': {}
          'f:revisionHistoryLimit': {}
          'f:selector': {}
          'f:strategy':
            'f:rollingUpdate':
              .: {}
              'f:maxSurge': {}
              'f:maxUnavailable': {}
            'f:type': {}
          'f:template':
            'f:metadata':
              'f:annotations':
                .: {}
                'f:prometheus.io/path': {}
                'f:prometheus.io/port': {}
                'f:prometheus.io/scheme': {}
                'f:prometheus.io/scrape': {}
              'f:labels':
                .: {}
                'f:app.kubernetes.io/instance': {}
                'f:app.kubernetes.io/managed-by': {}
                'f:app.kubernetes.io/name': {}
                'f:modelmesh-service': {}
                'f:name': {}
            'f:spec':
              'f:volumes':
                .: {}
                'k:{"name":"etcd-config"}':
                  .: {}
                  'f:name': {}
                  'f:secret':
                    .: {}
                    'f:defaultMode': {}
                    'f:secretName': {}
                'k:{"name":"models-dir"}':
                  .: {}
                  'f:emptyDir':
                    .: {}
                    'f:sizeLimit': {}
                  'f:name': {}
                'k:{"name":"proxy-tls"}':
                  .: {}
                  'f:name': {}
                  'f:secret':
                    .: {}
                    'f:defaultMode': {}
                    'f:secretName': {}
                'k:{"name":"shm"}':
                  .: {}
                  'f:emptyDir':
                    .: {}
                    'f:medium': {}
                    'f:sizeLimit': {}
                  'f:name': {}
                'k:{"name":"storage-config"}':
                  .: {}
                  'f:name': {}
                  'f:secret':
                    .: {}
                    'f:defaultMode': {}
                    'f:secretName': {}
                'k:{"name":"tc-config"}':
                  .: {}
                  'f:configMap':
                    .: {}
                    'f:defaultMode': {}
                    'f:name': {}
                  'f:name': {}
              'f:containers':
                'k:{"name":"mm"}':
                  'f:image': {}
                  'f:volumeMounts':
                    .: {}
                    'k:{"mountPath":"/etc/watson/mmesh/config"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                    'k:{"mountPath":"/opt/kserve/mmesh/etcd"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:readOnly': {}
                  'f:terminationMessagePolicy': {}
                  .: {}
                  'f:resources':
                    .: {}
                    'f:limits':
                      .: {}
                      'f:cpu': {}
                      'f:memory': {}
                    'f:requests':
                      .: {}
                      'f:cpu': {}
                      'f:memory': {}
                  'f:lifecycle':
                    .: {}
                    'f:preStop':
                      .: {}
                      'f:exec':
                        .: {}
                        'f:command': {}
                  'f:livenessProbe':
                    .: {}
                    'f:failureThreshold': {}
                    'f:httpGet':
                      .: {}
                      'f:path': {}
                      'f:port': {}
                      'f:scheme': {}
                    'f:initialDelaySeconds': {}
                    'f:periodSeconds': {}
                    'f:successThreshold': {}
                    'f:timeoutSeconds': {}
                  'f:env':
                    'k:{"name":"MM_SVC_GRPC_MAX_MSG_SIZE"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"WKUBE_POD_NAME"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:fieldRef': {}
                    'k:{"name":"INTERNAL_GRPC_PORT"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"MM_SERVICE_NAME"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"MM_LOCATION"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:fieldRef': {}
                    'k:{"name":"MM_METRICS"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"MM_SVC_GRPC_PORT"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"MM_KVSTORE_PREFIX"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    .: {}
                    'k:{"name":"MM_LABELS"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"WKUBE_POD_IPADDR"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:fieldRef': {}
                    'k:{"name":"KV_STORE"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"INTERNAL_SERVING_GRPC_PORT"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"MM_DEFAULT_VMODEL_OWNER"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"MM_TYPE_CONSTRAINTS_PATH"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"MM_DATAPLANE_CONFIG_PATH"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"SHUTDOWN_TIMEOUT_MS"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                  'f:readinessProbe':
                    .: {}
                    'f:failureThreshold': {}
                    'f:httpGet':
                      .: {}
                      'f:path': {}
                      'f:port': {}
                      'f:scheme': {}
                    'f:initialDelaySeconds': {}
                    'f:periodSeconds': {}
                    'f:successThreshold': {}
                    'f:timeoutSeconds': {}
                  'f:securityContext':
                    .: {}
                    'f:capabilities':
                      .: {}
                      'f:drop': {}
                  'f:terminationMessagePath': {}
                  'f:imagePullPolicy': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":2112,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:name': {}
                      'f:protocol': {}
                    'k:{"containerPort":8033,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:name': {}
                      'f:protocol': {}
                  'f:name': {}
                'k:{"name":"oauth-proxy"}':
                  'f:image': {}
                  'f:volumeMounts':
                    .: {}
                    'k:{"mountPath":"/etc/tls/private"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                  'f:terminationMessagePolicy': {}
                  .: {}
                  'f:resources':
                    .: {}
                    'f:limits':
                      .: {}
                      'f:cpu': {}
                      'f:memory': {}
                    'f:requests':
                      .: {}
                      'f:cpu': {}
                      'f:memory': {}
                  'f:args': {}
                  'f:livenessProbe':
                    .: {}
                    'f:failureThreshold': {}
                    'f:httpGet':
                      .: {}
                      'f:path': {}
                      'f:port': {}
                      'f:scheme': {}
                    'f:initialDelaySeconds': {}
                    'f:periodSeconds': {}
                    'f:successThreshold': {}
                    'f:timeoutSeconds': {}
                  'f:readinessProbe':
                    .: {}
                    'f:failureThreshold': {}
                    'f:httpGet':
                      .: {}
                      'f:path': {}
                      'f:port': {}
                      'f:scheme': {}
                    'f:initialDelaySeconds': {}
                    'f:periodSeconds': {}
                    'f:successThreshold': {}
                    'f:timeoutSeconds': {}
                  'f:terminationMessagePath': {}
                  'f:imagePullPolicy': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":8443,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:name': {}
                      'f:protocol': {}
                  'f:name': {}
                'k:{"name":"ovms"}':
                  'f:image': {}
                  'f:volumeMounts':
                    .: {}
                    'k:{"mountPath":"/dev/shm"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                    'k:{"mountPath":"/models"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                  'f:terminationMessagePolicy': {}
                  .: {}
                  'f:resources':
                    .: {}
                    'f:limits':
                      .: {}
                      'f:cpu': {}
                      'f:memory': {}
                    'f:requests':
                      .: {}
                      'f:cpu': {}
                      'f:memory': {}
                  'f:args': {}
                  'f:lifecycle':
                    .: {}
                    'f:preStop':
                      .: {}
                      'f:httpGet':
                        .: {}
                        'f:path': {}
                        'f:port': {}
                        'f:scheme': {}
                  'f:securityContext':
                    .: {}
                    'f:capabilities':
                      .: {}
                      'f:drop': {}
                  'f:terminationMessagePath': {}
                  'f:imagePullPolicy': {}
                  'f:name': {}
                'k:{"name":"ovms-adapter"}':
                  'f:image': {}
                  'f:volumeMounts':
                    .: {}
                    'k:{"mountPath":"/models"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                    'k:{"mountPath":"/storage-config"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                      'f:readOnly': {}
                  'f:terminationMessagePolicy': {}
                  .: {}
                  'f:resources':
                    .: {}
                    'f:limits':
                      .: {}
                      'f:cpu': {}
                      'f:memory': {}
                    'f:requests':
                      .: {}
                      'f:cpu': {}
                      'f:memory': {}
                  'f:lifecycle':
                    .: {}
                    'f:preStop':
                      .: {}
                      'f:httpGet':
                        .: {}
                        'f:path': {}
                        'f:port': {}
                        'f:scheme': {}
                  'f:command': {}
                  'f:env':
                    'k:{"name":"USE_EMBEDDED_PULLER"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"OVMS_FORCE_TARGET_DEVICE"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"RUNTIME_VERSION"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"RUNTIME_PORT"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    .: {}
                    'k:{"name":"CONTAINER_MEM_REQ_BYTES"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:resourceFieldRef': {}
                    'k:{"name":"RUNTIME_DATA_ENDPOINT"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"ADAPTER_PORT"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"LOADTIME_TIMEOUT"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"MEM_BUFFER_BYTES"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                  'f:securityContext':
                    .: {}
                    'f:capabilities':
                      .: {}
                      'f:drop': {}
                  'f:terminationMessagePath': {}
                  'f:imagePullPolicy': {}
                  'f:name': {}
                'k:{"name":"rest-proxy"}':
                  'f:image': {}
                  'f:terminationMessagePolicy': {}
                  .: {}
                  'f:resources':
                    .: {}
                    'f:limits':
                      .: {}
                      'f:cpu': {}
                      'f:memory': {}
                    'f:requests':
                      .: {}
                      'f:cpu': {}
                      'f:memory': {}
                  'f:env':
                    .: {}
                    'k:{"name":"REST_PROXY_GRPC_MAX_MSG_SIZE_BYTES"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"REST_PROXY_GRPC_PORT"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"REST_PROXY_LISTEN_PORT"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"REST_PROXY_USE_TLS"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                  'f:terminationMessagePath': {}
                  'f:imagePullPolicy': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":8008,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:name': {}
                      'f:protocol': {}
                  'f:name': {}
              'f:dnsPolicy': {}
              'f:serviceAccount': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:terminationGracePeriodSeconds': {}
              'f:serviceAccountName': {}
              'f:securityContext': {}
              'f:affinity':
                .: {}
                'f:nodeAffinity':
                  .: {}
                  'f:requiredDuringSchedulingIgnoredDuringExecution': {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2024-02-23T14:19:51Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:deployment.kubernetes.io/revision': {}
        'f:status':
          'f:availableReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:observedGeneration': {}
          'f:readyReplicas': {}
          'f:replicas': {}
          'f:updatedReplicas': {}
      subresource: status
  namespace: fraud-detection-w-modelmesh
  ownerReferences:
    - apiVersion: serving.kserve.io/v1alpha1
      kind: ServingRuntime
      name: ovms
      uid: 4f7c5514-2a1f-479b-9978-93ffe4170856
      controller: true
      blockOwnerDeletion: true
  labels:
    app.kubernetes.io/instance: modelmesh-controller
    app.kubernetes.io/managed-by: modelmesh-controller
    app.kubernetes.io/name: modelmesh-controller
    modelmesh-service: modelmesh-serving
    name: modelmesh-serving-ovms
spec:
  replicas: 1
  selector:
    matchLabels:
      modelmesh-service: modelmesh-serving
      name: modelmesh-serving-ovms
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: modelmesh-controller
        app.kubernetes.io/managed-by: modelmesh-controller
        app.kubernetes.io/name: modelmesh-controller
        modelmesh-service: modelmesh-serving
        name: modelmesh-serving-ovms
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: '2112'
        prometheus.io/scheme: https
        prometheus.io/scrape: 'true'
    spec:
      restartPolicy: Always
      serviceAccountName: modelmesh-serving-sa
      schedulerName: default-scheduler
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - arm64
      terminationGracePeriodSeconds: 90
      securityContext: {}
      containers:
        - name: rest-proxy
          image: >-
            registry.redhat.io/rhoai/odh-mm-rest-proxy-rhel8@sha256:200d075020e9f393d190a9f480ce7276ec63eb1a6edbf142c997ac8919c0eff2
          ports:
            - name: http
              containerPort: 8008
              protocol: TCP
          env:
            - name: REST_PROXY_LISTEN_PORT
              value: '8008'
            - name: REST_PROXY_GRPC_PORT
              value: '8033'
            - name: REST_PROXY_USE_TLS
              value: 'false'
            - name: REST_PROXY_GRPC_MAX_MSG_SIZE_BYTES
              value: '16777216'
          resources:
            limits:
              cpu: '1'
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 96Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
        - resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 256Mi
          readinessProbe:
            httpGet:
              path: /oauth/healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: oauth-proxy
          livenessProbe:
            httpGet:
              path: /oauth/healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: proxy-tls
              mountPath: /etc/tls/private
          terminationMessagePolicy: File
          image: >-
            registry.redhat.io/openshift4/ose-oauth-proxy@sha256:4bef31eb993feb6f1096b51b4876c65a6fb1f4401fee97fa4f4542b6b7c9bc46
          args:
            - '--https-address=:8443'
            - '--provider=openshift'
            - '--openshift-service-account="modelmesh-serving-sa"'
            - '--upstream=http://localhost:8008'
            - '--tls-cert=/etc/tls/private/tls.crt'
            - '--tls-key=/etc/tls/private/tls.key'
            - '--cookie-secret=SECRET'
            - >-
              --openshift-delegate-urls={"/": {"namespace":
              "fraud-detection-w-modelmesh", "resource": "services", "verb":
              "get"}}
            - >-
              --openshift-sar={"namespace": "fraud-detection-w-modelmesh",
              "resource": "services", "verb": "get"}
            - '--skip-auth-regex=''(^/metrics|^/apis/v1beta1/healthz)'''
        - resources:
            limits:
              cpu: '2'
              memory: 8Gi
            requests:
              cpu: '1'
              memory: 4Gi
          terminationMessagePath: /dev/termination-log
          lifecycle:
            preStop:
              httpGet:
                path: /prestop
                port: 8090
                scheme: HTTP
          name: ovms
          securityContext:
            capabilities:
              drop:
                - ALL
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: models-dir
              mountPath: /models
            - name: shm
              mountPath: /dev/shm
          terminationMessagePolicy: File
          image: >-
            quay.io/modh/openvino_model_server@sha256:007304a96acd654ca5133c50990c6785464fcea44304c8a846d3279b9c83a9d4
          args:
            - '--port=8001'
            - '--rest_port=8888'
            - '--config_path=/models/model_config_list.json'
            - '--file_system_poll_wait_seconds=0'
            - '--grpc_bind_address=127.0.0.1'
            - '--rest_bind_address=127.0.0.1'
        - resources:
            limits:
              cpu: '2'
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 96Mi
          terminationMessagePath: /dev/termination-log
          lifecycle:
            preStop:
              httpGet:
                path: /prestop
                port: 8090
                scheme: HTTP
          name: ovms-adapter
          command:
            - /opt/app/ovms-adapter
          env:
            - name: ADAPTER_PORT
              value: '8085'
            - name: RUNTIME_PORT
              value: '8888'
            - name: RUNTIME_DATA_ENDPOINT
              value: 'port:8001'
            - name: CONTAINER_MEM_REQ_BYTES
              valueFrom:
                resourceFieldRef:
                  containerName: ovms
                  resource: requests.memory
                  divisor: '0'
            - name: MEM_BUFFER_BYTES
              value: '134217728'
            - name: LOADTIME_TIMEOUT
              value: '90000'
            - name: USE_EMBEDDED_PULLER
              value: 'true'
            - name: RUNTIME_VERSION
              value: 007304a96acd654ca5133c50990c6785464fcea44304c8a846d3279b9c83a9d4
            - name: OVMS_FORCE_TARGET_DEVICE
              value: AUTO
          securityContext:
            capabilities:
              drop:
                - ALL
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: models-dir
              mountPath: /models
            - name: storage-config
              readOnly: true
              mountPath: /storage-config
          terminationMessagePolicy: File
          image: >-
            registry.redhat.io/rhoai/odh-modelmesh-runtime-adapter-rhel8@sha256:18f2a43f2e12a0aadc3695f88d5b37593027fb1a2bb5dd7ef8e119b586d2958f
        - resources:
            limits:
              cpu: '3'
              memory: 448Mi
            requests:
              cpu: 300m
              memory: 448Mi
          readinessProbe:
            httpGet:
              path: /ready
              port: 8089
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          lifecycle:
            preStop:
              exec:
                command:
                  - /opt/kserve/mmesh/stop.sh
                  - wait
          name: mm
          livenessProbe:
            httpGet:
              path: /live
              port: 8089
              scheme: HTTP
            initialDelaySeconds: 90
            timeoutSeconds: 5
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 2
          env:
            - name: MM_SERVICE_NAME
              value: modelmesh-serving
            - name: MM_SVC_GRPC_PORT
              value: '8033'
            - name: WKUBE_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: WKUBE_POD_IPADDR
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: MM_LOCATION
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: KV_STORE
              value: 'etcd:/opt/kserve/mmesh/etcd/etcd_connection'
            - name: MM_METRICS
              value: 'prometheus:port=2112;scheme=https'
            - name: SHUTDOWN_TIMEOUT_MS
              value: '90000'
            - name: INTERNAL_SERVING_GRPC_PORT
              value: '8001'
            - name: INTERNAL_GRPC_PORT
              value: '8085'
            - name: MM_SVC_GRPC_MAX_MSG_SIZE
              value: '16777216'
            - name: MM_KVSTORE_PREFIX
              value: mm
            - name: MM_DEFAULT_VMODEL_OWNER
              value: ksp
            - name: MM_LABELS
              value: >-
                mt:onnx,mt:onnx:1,mt:openvino_ir,mt:openvino_ir:opset1,mt:tensorflow,mt:tensorflow:2,pv:grpc-v1,rt:ovms
            - name: MM_TYPE_CONSTRAINTS_PATH
              value: /etc/watson/mmesh/config/type_constraints
            - name: MM_DATAPLANE_CONFIG_PATH
              value: /etc/watson/mmesh/config/dataplane_api_config
          securityContext:
            capabilities:
              drop:
                - ALL
          ports:
            - name: grpc
              containerPort: 8033
              protocol: TCP
            - name: prometheus
              containerPort: 2112
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: tc-config
              mountPath: /etc/watson/mmesh/config
            - name: etcd-config
              readOnly: true
              mountPath: /opt/kserve/mmesh/etcd
          terminationMessagePolicy: File
          image: >-
            registry.redhat.io/rhoai/odh-modelmesh-rhel8@sha256:6478ce1c4b8780a62f44517cb9c56a0f0b7b2d75ff1120bcc21fca4dea8f4c1e
      serviceAccount: modelmesh-serving-sa
      volumes:
        - name: shm
          emptyDir:
            medium: Memory
            sizeLimit: 2Gi
        - name: proxy-tls
          secret:
            secretName: model-serving-proxy-tls
            defaultMode: 420
        - name: models-dir
          emptyDir:
            sizeLimit: 12Gi
        - name: storage-config
          secret:
            secretName: storage-config
            defaultMode: 420
        - name: tc-config
          configMap:
            name: tc-config
            defaultMode: 420
        - name: etcd-config
          secret:
            secretName: model-serving-etcd
            defaultMode: 420
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 15%
      maxSurge: 75%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 3
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
  conditions:
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2024-02-23T14:19:21Z'
      lastTransitionTime: '2024-02-23T14:19:21Z'
      reason: NewReplicaSetAvailable
      message: >-
        ReplicaSet "modelmesh-serving-ovms-7f4f48649b" has successfully
        progressed.
    - type: Available
      status: 'True'
      lastUpdateTime: '2024-02-23T14:19:51Z'
      lastTransitionTime: '2024-02-23T14:19:51Z'
      reason: MinimumReplicasAvailable
      message: Deployment has minimum availability.
